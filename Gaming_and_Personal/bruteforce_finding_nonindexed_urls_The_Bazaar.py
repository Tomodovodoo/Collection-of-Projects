# -*- coding: utf-8 -*-
"""bruteforce_finding_nonindexed_urls.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zvcq5dk_pFfEn2WDz5EIWcyGONixVqRe
"""

pip install pyppeteer

# pip install pyppeteer nest_asyncio
import nest_asyncio
nest_asyncio.apply()

import asyncio
from pyppeteer import launch
import urllib.parse

async def extract_api_endpoints(base_url):
    endpoints = set()
    browser = await launch(headless=True,
                           args=["--no-sandbox","--disable-setuid-sandbox"])
    page = await browser.newPage()

    # Record every /api/* request
    page.on('request', lambda req: endpoints.add(req.url)
            if "/api/" in urllib.parse.urlparse(req.url).path else None)

    # Go to homepage and wait for app to stabilize
    await page.goto(base_url, waitUntil='networkidle2')

    # Grab every internal link (<a href="/…">)
    links = await page.evaluate('''
        () => Array.from(document.querySelectorAll('a[href^="/"]'))
                  .map(a => a.href)
    ''')

    # Dedupe and visit each one
    for link in sorted(set(links)):
        # We only want “same‑site” links
        if not link.startswith(base_url):
            continue
        try:
            await page.goto(link, waitUntil='networkidle2')
        except Exception:
            # timeout or other – keep going
            pass

    await browser.close()
    return sorted(endpoints)

# Entry point – works even if an event loop is already running
apis = asyncio.get_event_loop().run_until_complete(
    extract_api_endpoints("https://www.howbazaar.gg")
)
print("\n".join(apis))